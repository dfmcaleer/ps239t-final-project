main = "Prestige vs. Income\n (Duncan)"	# main title
)										# close the function
legend("bottomright", 								# location of the legend
c("Blue-collar", "Professional", "White-collar"), 	# labels
pch=1:3,  											# symbols
col=cols, 											# colors
inset=.01)											# margin gap
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "bc"), col = cols[1])		# lm line for blue-collar
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "prof"), col = cols[2])		# lm line for professional
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "wc"), col = cols[3])
library(car)
data(Duncan)
cols <- c("blue", "black", "red")
plot(prestige ~ income, data = Duncan,
pch = as.numeric(Duncan$type),			# Different symbols per type
col = cols[as.numeric(Duncan$type)],	# Different colors per type
xlab = "% Males earning > $3500/year",	# x-axis label
ylab = "Prestige by NORC raters",		# y-axis label
main = "Prestige vs. Income\n (Duncan)"	# main title
)										# close the function
legend("bottomright", 								# location of the legend
c("Blue-collar", "Professional", "White-collar"), 	# labels
pch=1:3,  											# symbols
col=cols, 											# colors
inset=.01)											# margin gap
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "bc"), col = cols[1])		# lm line for blue-collar
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "prof"), col = cols[2])		# lm line for professional
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "wc"), col = cols[3])		# lm line for white-collar
identify(x = Duncan$income, y = Duncan$prestige,	# variables
labels = rownames(Duncan), 							# get the labels from variables
n = 2)
cols <- c("blue", "black", "red")
plot(prestige ~ income, data = Duncan,
pch = as.numeric(Duncan$type),			# Different symbols per type
col = cols[as.numeric(Duncan$type)],	# Different colors per type
xlab = "% Males earning > $3500/year",	# x-axis label
ylab = "Prestige by NORC raters",		# y-axis label
main = "Prestige vs. Income\n (Duncan)"	# main title
)										# close the function
legend("bottomright", 								# location of the legend
c("Blue-collar", "Professional", "White-collar"), 	# labels
pch=1:3,  											# symbols
col=cols, 											# colors
inset=.01)											# margin gap
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "bc"), col = cols[1])		# lm line for blue-collar
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "prof"), col = cols[2])		# lm line for professional
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "wc"), col = cols[3])		# lm line for white-collar
data(Duncan)
library(car)
library(car)
data(Duncan)
plot(prestige ~ income, data = Duncan)
plot(prestige ~ income, data = Duncan,
pch = as.numeric(Duncan$type),			# Different symbols per type
col = cols[as.numeric(Duncan$type)],	# Different colors per type
xlab = "% Males earning > $3500/year",	# x-axis label
ylab = "Prestige by NORC raters",		# y-axis label
main = "Prestige vs. Income\n (Duncan)"	# main title
)										# close the function
legend("bottomright", 								# location of the legend
c("Blue-collar", "Professional", "White-collar"), 	# labels
pch=1:3,  											# symbols
col=cols, 											# colors
inset=.01)											# margin gap
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "bc"), col = cols[1])		# lm line for blue-collar
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "prof"), col = cols[2])		# lm line for professional
abline(lm(prestige ~ income, data = Duncan,
subset = Duncan$type == "wc"), col = cols[3])		# lm line for white-collar
pdf("/Users/Quentyn/Desktop/myplot.pdf")
x <- (1, 2, 3, 6)
x <- c(1, 2, 3, 6)
y <- c(2, 3, 5, 10)
lm(y ~ x)
x <- c(1, 2, 3, 6)
y <- c(2,3, 5, 10)
lm(y ~ x)
plot(x, y)
plot(x, y, type = "p")
abline(lm(y~x))
data <- read.csv("Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/Help_my_life/python-code/ideo-data-dummies.csv")
data <- read.csv("Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/Help_my_life/python_code/ideo-data-dummies.csv")
x <- (1, 2, 3, 6)
x <- c(1, 2, 3, 6)
y <- c(2,3,5,10)
summary(lm(y ~ x))
number_tutors <- c(1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9)
admit_rate <- c(.4, .3, .31, .39, .39, .41, .35, .42, .5, .49, .52, .51, .5, .6, .65, .68, .65, .7, .63, .69, .68, .6, .74, .7, .81, .78, .85)
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
number_computers <- c(100,100,100,200,200,200,300,300,300,400,400,400,500,500,500,600,600,600,700,700,700,800,800,800,900,900,900)
admit_rate2 <- c(.20, .27, .21, .33, .49, .35, .40, .49, .59, .51, .66, .69, .49, .69, .65, .71, .89, .7, .63, .79, .75, .6, .89, .86, .9, .9, .9)
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
number_tutors <- c(1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9)
admit_rate <- c(.4, .3, .31, .39, .39, .41, .35, .42, .5, .49, .52, .51, .5, .6, .65, .68, .65, .7, .63, .69, .68, .6, .74, .7, .81, .78, .85)
?rnorm
rand1 <- rnorm(100, 0, 1)
rand2 <- rnorm(100, 0, 5)
rand1 <- rnorm(27, 0, 1)
rand2 <- rnorm(27, 0, 5)
admit_rate <- (number_tutors/10) + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
rand1 <- rnorm(27, 0, .5)
admit_rate <- (number_tutors/10) + rand1
plot(number_tutors, admit_rate)
rand1 <- rnorm(27, 0, .01)
rand2 <- rnorm(27, 0, 3)
admit_rate <- (number_tutors/10) + rand1
plot(number_tutors, admit_rate)
rand1 <- rnorm(27, 0, .1)
admit_rate <- (number_tutors/10) + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
rand1 <- rnorm(27, 0, .5)
admit_rate <- (number_tutors/10) + rand1
plot(number_tutors, admit_rate)
rand1 <- rnorm(27, 0, .05)
admit_rate <- (number_tutors/10) + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
number_computers <- number_tutors*10
number_computers <- number_tutors*100
admit_rate <- (number_tutors/10) - 2 + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
admit_rate <- (number_tutors/10) - 2 + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
admit_rate <- (number_tutors/10)  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
admit_rate <- (number_tutors/10)*.8  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
admit_rate <- (number_tutors/10)*.5  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
admit_rate <- (number_tutors/10)*.1  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
admit_rate <- (number_tutors/10)*.25  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
admit_rate2 <- (number_computers/1000)*.75 + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate <- (number_tutors/10)  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/10000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/100000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/100000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/100000) + rand1
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/10000) + rand1
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/1000) + rand1
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/1000) + rand3
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/1000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
rand2 <- rnorm(27, 0, .3)
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
rand2 <- rnorm(27, 0, .1)
admit_rate2 <- (number_computers/1000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
number_tutors <- c(2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9)
admit_rate <- (number_tutors/10)  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
rand1 <- rnorm(24, 0, .05)
rand2 <- rnorm(24, 0, .1)
number_tutors <- c(2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9)
admit_rate <- (number_tutors/10)  + rand1
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/1000)*1.1 + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000)*1.1 + rand2
admit_rate2 <- (number_computers/1000)*1.5 + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
rand2 <- rnorm(24, 0, .15)
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000)*1.5 + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
admit_rate2 <- (number_computers/1000) + rand2
rand1 <- rnorm(24, 0, .05)
rand2 <- rnorm(24, 0, .2)
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000) + rand2
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000) + rand2
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
rand2 <- rnorm(24, 0, .3)
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000) + rand2
number_computers <- number_tutors*100
admit_rate2 <- (number_computers/1000) + rand2
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
plot(number_computers, admit_rate2)
abline(lm(admit_rate2~number_computers))
plot(number_tutors, admit_rate)
abline(lm(admit_rate~number_tutors))
approval <- c(25, 35, 55)
ads <- c(10, 5, 2)
summary(lm(ads~approval))
approval <- c(25, 35, 45, 55)
ads <- c(10, 5, 4, 2)
summary(lm(ads~approval))
approval <- c(25, 35, 45, 50, 55)
ads <- c(10, 5, 4, 2, 2)
summary(lm(ads~approval))
approval <- c(25, 35, 40, 45, 50, 55)
ads <- c(10, 5, 4, 3, 2, 2)
approval <- c(25, 35, 40, 45, 50, 55)
ads <- c(10, 5, 4, 3, 2, 1)
summary(lm(ads~approval))
productivity <- rnorm(90, 6, 1.5)
sleep <- rnorm(90, 6, 2)
plot(sleep, productivity)
abline(lm(productivity~sleep))
productivity <- sleep + rnorm(90, 1, 1.5)
plot(sleep, productivity)
abline(lm(productivity~sleep))
summary(lm(productivity~sleep))
productivity <- .75*sleep + .25*workload + rnorm(90, 1, 1.5)
workload <- rnorm(90, 2.5, 1.5)
productivity <- .75*sleep + .25*workload + rnorm(90, 1, 1.5)
productivity <- (.75*sleep) + (.25*workload) + rnorm(90, 1, 1.5)
productivity <- (sleep*.75) + (.25*workload) + rnorm(90, 1, 1.5)
workload <- rnorm(90, 2.5, 1.5)
sleep <- rnorm(90, 6, 2)
productivity <- (sleep*.75) + (.25*workload) + rnorm(90, 1, 1.5)
workload <- rnorm(90, 2.5, 1.5)
plot(sleep, productivity)
abline(lm(productivity~sleep))
summary(lm(productivity~sleep))
summary(lm(productivity~sleep+workload))
productivity <- (sleep*.75) + (.5*workload) + rnorm(90, 1, 1.5)
summary(lm(productivity~sleep))
summary(lm(productivity~sleep+workload))
workload <- rnorm(90, 2.5, 1.5)
sleep <- rnorm(90, 6, 2) - .1*workload
productivity <- (sleep*.75) + (.5*workload) + rnorm(90, 1, 1.5)
summary(lm(productivity~sleep))
summary(lm(productivity~sleep+workload))
sleep <- rnorm(90, 6, 2) - .2*workload
productivity <- (sleep*.75) + (.5*workload) + rnorm(90, 1, 1.5)
summary(lm(productivity~sleep))
summary(lm(productivity~sleep+workload))
workload <- rnorm(90, 2.5, 1.5)
workload <- rnorm(90, 2.5, 1.5)
sleep <- rnorm(90, 6, 2) - (.5*workload)
productivity <- (sleep*.75) + (.5*workload) + rnorm(90, 1, 1.5)
productivity <- (sleep*.75) + (.75*workload) + rnorm(90, 1, 1.5)
summary(lm(productivity~sleep))
summary(lm(productivity~sleep+workload))
plot(sleep, productivity)
abline(lm(productivity~sleep))
getwd()
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project")
data <- read.csv("/Data/content-ideo.csv")
data <- read.csv("Data/content-ideo.csv")
View(data)
rm(list=ls())
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project")
data <- read.csv("Data/content-ideo.csv")
library(tm)
install.packages(c("tm", "RTextTools", "lsa", "cluster", "fpc"))
library(tm)
library(RTextTools)
library(lsa)
library(cluster)
library(fpc)
rm(list=ls())
docs <- Corpus(DirSource("Data/content-ideo.csv"))
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project")
docs <- Corpus(DirSource("Data/content-ideo.csv"))
docs <- Corpus(DirSource("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project/Data/content-ideo.csv"))
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project")
data <- read.csv("Data/content-ideo.csv")
?Corpus
View(data)
##Setting up environment
rm(list=ls())
docs.df <-read.csv("Data/content-ideo.csv", header=TRUE) #read in CSV file
View(docs.df)
docs <- Corpus(VectorSource(docs.df$content))
docs
dtm <- DocumentTermMatrix(docs)
dim(dtm)
inspect(dtm[,100:104])
inspect(dtm[1:4,100:104])
dtm.m <- as.matrix(dtm)
dtm.t <- t(dtm.m)
d <- cosine(dtm.t)
d <- as.dist(1-d)
plot(hclust(d))
?hclust
plot(hclust(d), labels=data$group)
plot(hclust(d, labels=data$group))
row.names(docs.df) <- docs.df$group
docs <- Corpus(VectorSource(docs.df$content))
docs
dtm <- DocumentTermMatrix(docs)
dim(dtm)
inspect(dtm[1:4,100:104])
dtm.m <- as.matrix(dtm)
dtm.t <- t(dtm.m)
d <- cosine(dtm.t)
d <- as.dist(1-d)
plot(hclust(d))
View(dtm.m)
dim(dtm.t)
View(dtm.t)
dim(dtm)
?hclust
setwd("Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/Computational_tools/PS239T/11_text-analysis")
setwd("Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/Computational_tools/PS239T/11_text-analysis")
rm(list=ls())
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project")
rm(list=ls())
setwd("Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/Computational_tools/PS239T/11_text-analysis")
getwd(0)
getwd()
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/Computational_tools/PS239T/11_text-analysis")
docs <- Corpus(DirSource("Data/British_Fiction"))
docs
dtm <- DocumentTermMatrix(docs)
dim(dtm)
dtm.m <- as.matrix(dtm)
dtm.t <- t(dtm.m)
d <- cosine(dtm.t)
d <- as.dist(1-d)
plot(hclust(d))
rm(list=ls())
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project")
docs.df <-read.csv("Data/content-ideo.csv", header=TRUE) #read in CSV file
row.names(docs.df) <- docs.df$group
docs <- Corpus(VectorSource(docs.df$content))
docs
dtm <- DocumentTermMatrix(docs)
dim(dtm)
inspect(dtm[1:4,100:104])
dtm.m <- as.matrix(dtm)
dtm.t <- t(dtm.m)
d <- cosine(dtm.t)
d <- as.dist(1-d)
fit <- hclust(d, method="ward")
fit <- hclust(d)
plot(fit, labels=docs.df$group)
?unique
docs.df <- unique(docs.df) #Dataset has some duplicates in it.
docs <- Corpus(VectorSource(docs.df$content))
docs
dtm <- DocumentTermMatrix(docs)
dim(dtm)
inspect(dtm[1:4,100:104])
dtm.m <- as.matrix(dtm)
dtm.t <- t(dtm.m)
d <- cosine(dtm.t)
d <- as.dist(1-d)
fit <- hclust(d)
plot(fit, labels=docs.df$group)
crazy_dendrogram <- plot(fit, labels=docs.df$group)
crazy_dendrogram
crazy_dendrogram <- plot(fit, labels=docs.df$group)
crazy_dendrogram
pdf("Results/crazy_dendrogram.pdf")
set.seed(0004)
clust <- kmeans(d,2)
clusters <- clust$cluster
clusters
plotcluster(d, clust$cluster)
set.seed(0001)
clust <- kmeans(d,2)
clusters <- clust$cluster
clusters
plotcluster(d, clust$cluster)
install.packages(c("stm", "plyr"))
library(stm)
library(plyr)
rm(list=ls())
data <- read.csv("Data/content-ideo.csv")
names(women)
names(data)
class(data$govt)
stopwords.govts <- as.character(data$govt)
stopwords.govts <- tolower(stopwords.country)
stopwords.govts <- tolower(stopwords.govts)
temp<-textProcessor(documents=data$content,metadata=data,customstopwords=stopwords.govts)
temp$meta
meta<-temp$meta
vocab<-temp$vocab
docs<-temp$documents
out <- prepDocuments(docs, vocab, meta, lower.thresh=2)
docs<-out$documents
vocab<-out$vocab
meta <-out$meta
?stm
mod.15 <- stm(docs,vocab, 15, data=meta, seed = 22222, max.em.its = 200)
topicQuality(model=mod.15, documents=docs)
?stm
model <- stm(docs,vocab, 10, data=meta, seed = 444, max.em.its = 100)
model <- stm(docs,vocab, 5, data=meta, seed = 444, max.em.its = 100)
?stm
model <- stm(docs,vocab, 10, prevalence = s, data=meta, seed = 444, max.em.its = 100)
model <- stm(docs,vocab, 10, prevalence = "s", data=meta, seed = 444, max.em.its = 100)
model <- stm(docs,vocab, 10, data=meta, seed = 444, max.em.its = 100)
jpeg("okay.jpeg",width=750,height=500,type="quartz")
topicQuality(model=model, documents=docs)
plot.STM(model,type="labels",topics=1:10,width=75)
dev.off()
plot.STM(model,type="labels",topics=1:10,width=75)
dev.off()
plot.STM(model,type="labels",topics=1:10,width=75)
jpeg("Results/crazy_dendrogram.jpeg", width=1600, height=1200, type = "quartz")
rm(list=ls())
setwd("/Users/Quentyn/Dropbox/DEMETRIA/UC_Berkeley/Fall_2015/ps239t-final-project")
docs.df <-read.csv("Data/content-ideo.csv", header=TRUE) #read in CSV file
row.names(docs.df) <- docs.df$group
docs.df <- unique(docs.df) #Dataset has some duplicates in it.
docs <- Corpus(VectorSource(docs.df$content))
docs
dtm <- DocumentTermMatrix(docs)
dim(dtm)
inspect(dtm[1:4,100:104])
dtm.m <- as.matrix(dtm)
dtm.t <- t(dtm.m)
d <- cosine(dtm.t)
d <- as.dist(1-d)
fit <- hclust(d)
jpeg("Results/crazy_dendrogram.jpeg", width=1600, height=1200, type = "quartz")
plot(fit, labels=docs.df$group)
plot(fit, labels=docs.df$group)
fit <- hclust(d)
plot(fit, labels=docs.df$group)
jpeg("Results/crazy_dendrogram.jpeg", width=1600, height=1200, type = "quartz")
dev.off()
rm(list=ls()) #Fresh start here.
data <- read.csv("Data/content-ideo.csv")
stopwords.govts <- as.character(data$govt)
stopwords.govts <- tolower(stopwords.govts)
temp<-textProcessor(documents=data$content,metadata=data,customstopwords=stopwords.govts)
meta<-temp$meta
vocab<-temp$vocab
docs<-temp$documents
out <- prepDocuments(docs, vocab, meta, lower.thresh=2)
docs<-out$documents
vocab<-out$vocab
meta <-out$meta
model <- stm(docs,vocab, 10, data=meta, seed = 444, max.em.its = 100)
jpeg("Results/stm.jpeg",width=700,height=1000,type="quartz")
plot.STM(model,type="labels",topics=1:10,width=75)
plot.STM(model,type="labels",topics=1:10,width=75)
jpeg("Results/stm.jpeg",width=700,height=1000,type="quartz")
dev.off()
